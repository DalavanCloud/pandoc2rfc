% PANDOC2RFC(1) Pandoc2rfc 3 User Manual
% Miek Gieben
% June 30, 2014

# NAME

pandoc2rfc - Process files with Pandoc syntax and run xml2rfc on them.

# SYNOPSIS

pandoc2rfc [*-THXNRhvdtx*] \[*FILE*\]...

# DESCRIPTION

Pandoc2rfc converts each file containing Pandoc syntax to a DOCBOOK XML file.
When all files are converted, xml2rfc (version 3) is called and a draft is created. 
The intermediate XML files are removed afterwards (unless the -d flag is given).

The current directory must contain a file `template.xml` (otherwise use the
`-t` flag) which holds the "front" (and "back") section of the I-D you are building.

Currently there isn't a standard extension for Pandoc source files, so the
following extension are recognized for the input files: `.pdc`, `.pandoc`,
`.mkd`, `.markdown`, and `.md`.

# OPTIONS

-T
:   Output a draft.txt, a text version with page breaks. This is the default.

-R
:   Output a draft.txt, a unpaginated (raw) text version.

-H
:   Output a draft.html.

-X
:   Output a draft.xml, with all references expanded.

-N
:   Output a draft.nroff.

-C
:   Remove all drafts.

-t TEMPLATE
:   Path to the `template.xml`, defaults to the current directory.

-x TRANSFORM
:   Path to the `tr.xsl` XSLT file, defaults to /usr/share/pandoc2rfc/tr.xsl.

-v
:   Be verbose and show the commands that are run and any warnings.

-d
:   Debug mode, do not remove the intermediate XML files.

-h
:   Show a short help message.

-V
:   Show version.

# TYPESETTING TEXT

Although you can type Pandoc syntax just fine, the following items are achieved
by misusing some of the syntax. Most of these changes stem from the fact that
with Pandoc you can not reference code blocks, tables and images.

* Pandoc style citations are not supported, you must use internal references
  for this. Using Pandoc's citations means citations are resolved when Pandoc
  runs and they would show up as plain text in the intermediate XML `[RFC2535]`, and
  from there will not be recognized as citations. Using references solves this;
* Referencing figures, images, artwork, tables and blockquote (anything that isn't a section 
  basically) is done by (ab)using inline footnotes, which 
  are typeset directly after the figure or table. An anchor is denoted by text
  in subscript in the footnote: `^[ ~anchor~ Title text.]`;
* Strike through text is discarded, except a in few places where it is used to signal
  special options: in lists it can be used as the first text in the first item:
  `1. ~~REQ%d~~ item text`, this will make the counter be REQ1, etc. 
  And in blockquote the citation line is given in strikethrough text:
  `> ~~cite URI~~ quote text`.
  When a section must not be included in the final RFC you can use the strike through text
  `~~removeInRFC~~` as the first text of the first paragraph.
* An abstract is typeset by giving a section the special name: `# ~~abstract~~ An abstract`
* A note is typeset by giving a section the special name: `# ~~note~~ A Note`

These differences can be summed up as:

1. If there is no Pandoc syntax to create a reference use footnote plus subscript: `^[ ~anchor~ Caption text ]`
2. If some extra attribute needs to be set strike-through text is used: `~~foo~~~`.

# SEE ALSO
The Pandoc documentation found at <http://johnmacfarlane.net/pandoc/>.
Also see <http://tools.ietf.org/html/draft-gieben-pandoc2rfc-03> for more information
on how to typeset an I-D.
