#!/bin/bash
# (c) Miek Gieben, 2013, A small wrapper around Pandoc, xsltproc and xml2rfc 
# to create an I-D.
TRANS=/usr/lib/pandoc2rfc/transform.xsl
TEMPLATE=template.xml

function usage {
    echo "Usage: pandoc2rfc [-THXNRh] [FILE]..."
    echo "Process files with Pandoc syntax and run xml2rfc on them."
    echo
    echo "  -T                  Create a draft.txt (with page breaks), this is the default"
    echo "  -R                  Create a draft.txt (unpaginated)"
    echo "  -H                  Create a draft.html"
    echo "  -X                  Create a draft.xml"
    echo "  -N                  Create a draft.nroff"
    echo "  -C                  Remove all drafts"
    echo "  -v                  Be verbose"
    echo "  -t template.xml     Path to template.xml, defaults to current directory"
    echo "  -x transform.xsl    Path to transform.xsl, defaults to /usr/lib/pandoc2rfc/transform.xsl"
    echo "  -h                  This help"
}

# As the extension for Pandoc is not really fixed, we try
# .pdc, .pandoc, .mkd, .markdown, .md and .txt
function extension {
    for ext in .pdc .pandoc .mkd .markdown .md .txt; do
        base=$(basename "$1" $ext)
        if [[ "$base" != $1 ]]; then
            echo $base
            return 0
        fi
    done
    echo ""
}

OUT="-f draft.txt --text"
while getopts "vht:x:THXNRC" o; do
    case $o in
    T) OUT="-f draft.txt --text";;
    R) OUT="-f draft.txt --raw";;
    H) OUT="-f draft.html --html";;
    X) OUT="-f draft.xml --exp";;
    N) OUT="-f draft.nroff --nroff";;
    C) [[ -n "$VERBOSE" ]] && echo rm -f draft.{txt,html,xml,nroff}
       rm -f draft.{txt,html,xml,nroff} && exit 0;;
    h) usage && exit 0;;
    t) TEMPLATE="$OPTARG";;
    x) TRANS="$OPTARG";;
    v) VERBOSE="y";;
    esac
done
shift $((OPTIND - 1))

XML=""
for f in "$@"; do
    base=$(extension "$f")
    if [[ -z "$base" ]]; then
        echo $0: Could not detect extension for $f >&2
        exit 1
    fi
    [[ -n "$VERBOSE" ]] && echo pandoc -t docbook -s $f \| xsltproc --nonet $TRANS - \> "$base".xml
    pandoc -t docbook -s "$f" | xsltproc --nonet $TRANS - > "$base".xml || exit 1
    XML="$XML $base.xml"
done
[[ -n "$XML" ]] && [[ -n "$VERBOSE" ]] && echo xml2rfc $TEMPLATE $OUT \&\& rm $XML
[[ -n "$XML" ]] && xml2rfc $TEMPLATE $OUT && rm $XML
